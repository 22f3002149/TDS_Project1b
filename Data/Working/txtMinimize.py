import ollama
import os
import re

# write python script that runs through all files in the 'Old Text' directory and copy the content and pass it to the 'run_deepseek_r1' function, which uses the deepseek-r1 model to generate a response for each file. The response should be saved in a new file with the same name but with a '.md' extension in the 'New Text' directory.
def process_old_text_files(old_text_dir, new_text_dir):
    if not os.path.exists(new_text_dir):
        os.makedirs(new_text_dir)

    for root, _, files in os.walk(old_text_dir):
        for file in files:
            if file.endswith('.txt'):
                file_path = os.path.join(root, file)
                with open(file_path, 'r', encoding='utf-8') as f:
                    content = f.read()

                # Generate response using deepseek-r1
                response = run_deepseek_r1(content)

                # Save the response to a new .md file
                # remove content inside think tags if any
                response = re.sub(r'<think>.*?</think>', '', response, flags=re.DOTALL)
                response = response.strip()  # Remove leading/trailing whitespace
                new_file_path = os.path.join(new_text_dir, os.path.splitext(file)[0] + '.md')
                with open(new_file_path, 'w', encoding='utf-8') as new_file:
                    new_file.write(response)

    print(f"Processed files from '{old_text_dir}' and saved responses to '{new_text_dir}'.")

def run_deepseek_r1(prompt):
    response = ollama.chat(
        model='deepseek-r1',  # or 'deepseek-coder:1.3b-instruct' if available
        messages=[
            {'role': 'system', 'content': 'You are a content writer specilized in data science teaching who generates markdown content based on the provided text which are generated by gemma3:27b model. The content should be single paragraph, consise not more than 80 words which capptures the essence of the text without losing important texts or codes.'},
            {'role': 'user', 'content': prompt}
        ]
    )
    return response['message']['content']

process_old_text_files('Old Text', 'New Text')